---
- name: Ensure replication user exists on master (from master).
  mysql_user:
    login_unix_socket: "{{ mysql_socket }}"
    name: "{{ mysql_replication_user.name }}"
    host: "{{ mysql_replication_user.host | default('%') }}"
    password: "{{ mysql_replication_user.password }}"
    priv: "*.*:REPLICATION SLAVE,REPLICATION CLIENT"
    state: present
  when:
    - mysql_replication_role == 'master'
    - mysql_replication_master != ''

- name: Ensure replication user exists on master (from slave).
  mysql_user:
    login_unix_socket: "{{ mysql_socket }}"
    name: "{{ mysql_replication_user.name }}"
    host: "{{ mysql_replication_user.host | default('%') }}"
    password: "{{ mysql_replication_user.password }}"
    priv: "*.*:REPLICATION SLAVE,REPLICATION CLIENT"
    state: present
  delegate_to: '{{ mysql_replication_master |regex_replace("."+dc_domain_name) }}'
  when:
    - mysql_replication_role == 'slave'
    - mysql_replication_master != ''

- name: Check slave replication status.
  mysql_replication:
    login_unix_socket: "{{ mysql_socket }}"
    mode: getslave
  ignore_errors: yes
  register: slave
  when:
    - mysql_replication_role == 'slave'
    - mysql_replication_master != ''

- name: Check master replication status.
  mysql_replication:
    mode: getmaster
    login_host: "{{ mysql_replication_master }}"
    login_user: "{{ mysql_replication_user.name }}"
    login_password: "{{ mysql_replication_user.password }}"
  register: master
  ignore_errors: True
  when:
    - mysql_replication_role == 'slave'
    - not slave.Is_Slave
    - mysql_replication_master != ''

- name: Configure replication on the slave.
  mysql_replication:
    login_unix_socket: "{{ mysql_socket }}"
    mode: changemaster
    master_host: "{{ mysql_replication_master }}"
    master_user: "{{ mysql_replication_user.name }}"
    master_password: "{{ mysql_replication_user.password }}"
    master_log_file: "{{ master.File }}"
    master_log_pos: "{{ master.Position }}"
  ignore_errors: True
  when:
    - mysql_replication_role == 'slave'
    - not slave.Is_Slave
    - mysql_replication_master != ''

- name: Start replication.
  mysql_replication:
    login_unix_socket: "{{ mysql_socket }}"
    mode: startslave
  when:
    - mysql_replication_role == 'slave'
    - not slave.Is_Slave
    - mysql_replication_master != ''

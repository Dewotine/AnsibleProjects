---
- name: "Delete previous {{ php_app_webroot }}/{{ php_app }} folder"
  file:
    path: "{{ php_app_webroot }}/{{ php_app }}"
    state: absent
  no_log: true

- name: "Create {{ php_app_webroot }}/{{ php_app }} folder"
  file:
    path: "{{ php_app_webroot }}/{{ php_app }}"
    state: directory
    owner: "{{ php_apache_user }}"
    group: "{{ php_apache_group }}"

- name: "Install {{ php_app }} in version {{ php_app_version }}"
  unarchive:
    src: "{{ lookup('vars', 'app_php_' + php_app  + '_download_url') }}"
    dest: "{{ php_app_webroot }}/{{ php_app }}"
    remote_src: yes
    owner: "{{ php_apache_user }}"
    group: "{{ php_apache_group }}"
    mode: 0755
    extra_opts:
      - '--strip-components=1'
  notify: reload apache

- name: "Ensure resources into {{ php_app_webroot }}/{{ php_app }} belong to apache"
  file:
    path: "{{ php_app_webroot }}/{{ php_app }}"
    owner: "{{ php_apache_user }}"
    group: "{{ php_apache_group }}"
    recurse: true

- name: "Executes extra scripts"
  command: "{{ php_app_webroot }}/{{ php_app }}/bin/install-jsdeps.sh"
  become_user: www-data
  loop: "{{ lookup('vars', 'app_php_' + php_app  + '_extra_scripts') }}"

- name: "Delete the installer folder"
  file:
    path: "{{ php_app_webroot }}/{{ php_app }}/{{ item }}"
    state: absent
  loop: "{{ lookup('vars', 'app_php_' + php_app  + '_cleanup_files_or_folder') }}"

- name: "Register application version"
  lineinfile:
    dest: "{{ php_app_versions_file }}"
    regexp: "^{{ php_app }}="
    line: "{{ php_app }}={{ php_app_version }}"
    state: present
    create: yes